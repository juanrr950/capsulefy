NOTE: I think we should study the structure a little bit more, so I will write here two options; we could add both of them
to the presentation and decide later, or decide before the presentation. Maybe we could use some feedback from the teachers
too.

The structure of the web application will be as follows:

Option A:
- Django app (Python), deployed in Heroku
- PostgreSQL database, also deployed in Heroku
- Spotify API
(Include a diagram showing that the Django app communicates with both the database and the Spotify API)

Option B:
- Django web app (Python), deployed in Heroku
- RESTful API, in Django or Node.js, deployed in Heroku
- PostgreSQL, also deployed in Heroku
- Spotify API
(Include a diagram showing that de Django app communicates with our API, and our API communicates with both the database
and the Swagger API. We could also use different independent APIs: one for payments, one for handling song lists, one for
system users... We would be using a microservices architecture in this case)